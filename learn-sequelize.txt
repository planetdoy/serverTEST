sequelize-cli : 시퀄라이즈 명령어를 실행하기 위한 패키지
mysql2 : MySQL과 sequelize를 이어주는 드라이버

MySQL과 연동할 때는 config안의 config.json정보가 사용됩니다.

Sequelize는 시퀄라이즈 패키지이자 생성자입니다.
config/config.json에서 데이터 베이스 설정을 불러온 후 new Sequelize를 통해
MySQL 연결 객체를 생성합니다. 연결 객체를 나중에 재사용하기위해 db.sequelize에 넣어두었습니다.

시퀄라이즈는 모델과 mysql의 테이블을 연결해주는 역할을 합니다.

테이블 생성시 모델을 만들고 모듈로 exports 합니다.
모델은 Sequelize.Model을 확장한 클래스로 선언합니다.
모델은 크게 static init 메서드와 static associate메서드로 나뉩니다.

init : 테이블에 대한 설정
associate : 다른 모델과의 관계를 적습니다.

시퀄라이즈는 알아서 id를 기본키로 연결하므로 id컬럼은 적어줄 필요가 없습니다.

MySQL                   Sequelize
VARCHAR          =>      STRING
INT              =>      INTEGER
TINYINT          =>      BOOLEAN
DATETIME         =>       DATE

UNSIGNED옵션이 적용된 INT=> INTEGER.UNSIGNED  
여기에 ZEROFILL 옵션도 사용하고 싶다면 INTEGER.UNSIGNED.ZEROFILL을 적습니다.

.init()의 두번째 옵션
sequelize : static init 메서드의 매개변수와 연결되는 옵션으로 db.sequelize 객체를 넣어야 합니다.
(model/index.js에서 연결합니다.)

timestamps : 속성 값이 true면 시퀄라이즈는 createAt과 updateAt 칼럼을 추가합니다.
            각각 로우가 생성될 때 수정될 때의 시간이 자동으로 입력됩니다.

underscored : 시퀄라이즈는 기본적으로 테이블명과 컬럼명을 캐멀케이스로 만듭니다.
                이를 스테이크 케이스로 바꾸는 옵션입니다.

modelName : 모델 이름을 설정할 수 있습니다. 노드 프로젝트에서 사용합니다.

tableName : 실제 데이터베이스의 테이블 이름이 됩니다.
            기본적으로 모델이름을 소문자 및 복수형으로 만듭니다.
            모델이름이 User라면 테이블 이름은 users가 됩니다.

paranoid : true로 설정하면 deletedAt이라는 칼럼이 생성됩니다.
            로우를 삭제할 때 완전히 지워지지 않고 deleteAt에 지운 시각이 기록됩니다.
            로우를 조회하면 deleteAt이 null인 값들만 조회됩니다.
            이유는 나중에 로우를 복원하기 위해서입니다. 

charset과 collate : 각각 utf8, utf8_general_ci로 설정해야 한글이 입력됩니다.
                    utf8mb4와 utf8mb4_general_ci는 이모티콘까지 가능합니다.



모델을 생성했다면 models/index.js 와 연결합니다.


7.6.3.1
시퀄라이즈에서는 1:N 관계를 hasmany라는 메서드로 표현합니다.
user 테이블의 로우 하나를 불러올 때 연결된 comments 테이블의 로우들도 같이 불러올 수 있습니다.

반대로 belongsTo 메서드도 있습니다.
comments 테이블의 로우를 불러올 때 연결된 users 테이블의 로우를 가져옵니다.

쿼리는 프로미스를 반환하므로 then을 붙여 결과값을 받을 수 있습니다.
async/await 문법 같이 사용할 수 있습니다.